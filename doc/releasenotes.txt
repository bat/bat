------------------------------------------
BAT - Bayesian Analysis Toolkit
------------------------------------------
Release notes for version:    0.9.1
Release date:                 2012-06-19
Urgency:                      high
------------------------------------------

This version is intended to be a pre-release for the stable BAT version 1.0.
It contains an important bugfix and a few improvements of Multi-template fitter
If you are upgrading from BAT version 0.4.3 or older, please also read the
release notes to BAT version 0.9 below. The most important changes are
summarized here. For detailed list of changes see the Changelog. For more
information consult the BAT webpage at http://mpp.mpg.de/bat/.

Mode finding:
-------------
o Fixed memory leak in FindModeMinuit()

Multi Template Fitter:
----------------------
o Added more plotting options for stacks
o Added description of new options to manual
o Added Doxygen comments and improved the reference manual



=========================================================================
=========================================================================
Release notes for version:    0.9
=========================================================================

!!! IMPORTANT !!!
-----------------
ALL USER MODELS HAVE TO BE ADJUSTED !!!

The user interface for the models has changed in version 0.9. The vector
of parameters is now passed as a const reference which leads to significant
speed up especially for models with large number of parameters.
Read below how to update your model to the new interface.

Code updates:
-------------
o Change allowing use of overloaded LogAPrioriProbability() with models
  derived from fast fitters.
o Do not delete the TMinuit object after the fit.
o Fix handling of delta priors, especially during plotting
o Global code cleanup.

Multi Template Fitter:
----------------------
o Added new fully rewritten template fitter with plenty of improvements and
  many new features.
o Detailed description of the fitter added to the documentation.
o The old BCTemplateFitter is kept for the moment but is depreceted and will
  be removed in the future.

Compilation:
------------
o Fixed Makefile generation in CreateProject.sh script.
o Fixed compilation in the presence of more BAT versions in the system.

Documentation:
--------------
o Added a quick start guide document.
o Updated the BAT introduction document.
o Added many Doxygen comments.

Examples:
---------
o Updated macro examples so they can be run in standard as well as in
  compiled mode without changes.
o In rootOutput example added a macro showing how to offline analyze the
  chains stored in a root file.



=========================================================================
=========================================================================
HOW TO UPDATE PRE-0.9 BAT MODEL TO THE NEW INTERFACE
=========================================================================

The user interface for the models has changed in BAT version 0.9 as
compared to BAT 0.4.3. In a number of methods of various BAT classes
the argument containing the vector of parameter values in double
precision was passed by value, i.e. as

   std::vector<double> parameters

In BAT 0.9 the vector of parameters is passed as constant reference to
vector, i.e. as

   const std::vector<double> & parameters

This reduces the CPU time spent on copying and thus increases the
overal performance. This is especially significant for models with
a large number of parameters.

In order to adapt a user defined model that was working with BAT
versions prior to 0.9 to the new interface, the argument parameters
has to be changed as described above in all model source files.
Generally, the change only affects the method declarations in the
model header file and the method definition line in the model source
file. The body of the method should not be affected.

In most cases this means that the following lines have to be adjusted
in both .h and .cxx files for the user model

double LogLikelihood(std::vector<double> params)
  -->  double LogLikelihood(const std::vector<double> & params)

double LogAPrioriProbability(std::vector<double> params)
  -->  double LogAPrioriProbability(const std::vector<double> & params)

Further affected methods potentially overloaded in the user model
class are:

double               BCIntegrate::FitFunction(const std::vector<double> & x, const std::vector<double> & par)
double               BCEngineMCMC::LogEval(const std::vector<double> & parameters)
std::vector<double>  BCIntegrate::GetProposalPointSACustom(const std::vector<double> & x, int t)
double               BCModel::SamplingFunction(const std::vector<double> & parameters);


If you need help with adjusting your existing model to the new version
of BAT, do not hesitate to contact us at bat@mpp.mpg.de.

